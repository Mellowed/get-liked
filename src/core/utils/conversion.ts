import {Playlist} from '../models/playlist';
import {Track} from '../models/track';

export class ConversionUtil {
  public static spotifyResponseToPlaylist(data: any): Array<Playlist> {
    let playlists = Array<Playlist>();
    for (let i of data.items) {
      playlists.push(
        new Playlist(i.name, i.owner.display_name, '', i.tracks.total, i.images[0] ? i.images[0].url : '', i.id)
      );
    }
    return playlists;
  }

  public static YoutubeResponseToPlaylist(data: any): Array<Playlist> {
    let playlists = Array<Playlist>();
    for (let item of data.items) {
      let s = item.snippet;
      playlists.push(
        new Playlist(
          s.title,
          s.channelTitle,
          s.publishedAt,
          item.contentDetails.itemCount,
          s.thumbnails.default.url,
          item.id
        )
      );
    }
    return playlists;
  }

  public static YoutubeResponseToTracks(data: any): Array<Track> {
    let playlists = Array<Track>();
    for (let item of data.items) {
      let s = item.snippet;
      if (s.description.includes('Auto-generated by YouTube')) {
        let splitDescription = s.description.split('\n\n');
        let artist = splitDescription[1].split(' Â· ');
        let album = splitDescription[2];
        playlists.push(
          new Track(s.title, artist[1], album, '', s.thumbnails.default.url, s.description, s.resourceId.videoId, '')
        );
      } else {
        // Some tracks are self published and we cannot auto complete the artist & album
        playlists.push(new Track(s.title, '', '', '', '', s.description, s.id, ''));
      }
    }
    return playlists;
  }
}
